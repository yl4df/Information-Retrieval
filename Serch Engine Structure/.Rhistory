install.packages("MASS") # Success
require(MASS)
(2+2)
(2+2
)
print("this is a cliche")
print("hello world"); print("this is a cliche");
(15+10)*3
(15+10)*3
15 + 10
12/6
0.7*5
3^3
3**3
15+10*3
(15+10)*3
## Some function examples
log(2.7)  # this function is the log with base e(or natural log), sometimes written as ln
Log(2.7)  # R is case-sensitive
log(2.7)  # this function is the log with base e(or natural log), sometimes written as ln
Log(2.7)  # R is case-sensitive
exp(1)    # On paper is this also written as e^1 (e being eulers number)
sqrt(9)
factorial(3)
abs(-5)
sum(2,4,6)
floor(5.7)
ceiling(5.7)
trunc(5.7)
round(5.7,0)
round(5.727,2)
print(5.7)
value1 <- round(5.7,0)
value1
total1
Total1   # Remeber R is case sensitive!
## Assigning objects to variables
total1 <- 10+15
Total1   # Remeber R is case sensitive!
total1
total1/value1
## Checking the class of a vector
class(stream_US_2017)
## Creating a variable using the concatenate function
stream_US_2017 <- c(50.8, 51.9, 52.8)
## Checking the class of a vector
class(stream_US_2017)
## Creating a variable using the concatenate function
stream_US_2017 <- c(50.8, 51.9, 52.8)
## Checking the class of a vector
class(stream_US_2017)
## Creating a character vector
char_vect <- c("Q1", "Q2", "Q3")
## Creating a complex vector
complex_vect <- c(2+3i,2-3i)
## Creating a numeric vector
num_vec <- c(51,52,53)
## Creating an integer vector
int_vect <- c(51L,52L,53L)
## Creating a logical vector
log_vect <- c(TRUE, FALSE, T, F)
## Mixed vector types
c(TRUE, 5)
c(2+(0+3i), 5)
c("Q1", 5)
c(TRUE, "Q1", 5)
c(TRUE, "Q1", 5)
## Testing the type of a vector
is.character(char_vect)
is.character(stream_US_2017)
## Changing the type of vector
as.character(stream_US_2017)
as.numeric(char_vect)
stream_US_2017_V2 <- as.character(stream_US_2017)
char_vect2 <- c(char_vect, "Q4")
class(stream_US_2017)
class(stream_US_2017_V2)
char_vect2 <- c(char_vect, "Q4")
tot_vect <- c(char_vect2, stream_US_2017)
tot_vect <- c(stream_US_2017, char_vect2)
1:5
tot_vect <- c(stream_US_2017, char_vect2)
1:5
5:1
-1:-5
-5:-1
?seq
seq(from = 1,to = 5,by = 0.5)
seq(from = -5, to = -1,by = 0.5)
seq(1,5)
seq(1,5)
seq(-5,-1)
seq(1,5, length.out = 5)
seq(1,5, length.out = 9)
rep(1, 10)
rep(1:5, 2)
rep(1:5, c(1,2,3,2,1))
rep(1:5, c(1,2,3,2,1))
rep(1:5, c(2,2,2,2,2))
rep(1:5, each=2)
new_vect <- 2011:2017
new_vect
new_vect[3]
new_vect[c(1,5)]
new_vect[2:4]
new_vect[c(1,1)]
new_vect[-6]
new_vect[-(3:6)]
new_vect[-c(3,7)]
new_vect[c(F,T,T,F,T,F,T)]
new_vect[c(F,T)]
new_vect[c(F,T,F,T,F,T,F)]
early_yrs <- new_vect[1:2] # Equivalent to  new_vect[c(1,2)]
new_vect
early_yrs
new_test <- new_vect
new_test
new_test[2:4] <- 2010:2008
new_test
new_test[5] <- 2007:2006 # Warning for trying to assign multiple value to one index
new_test
# Assigning one value in multiple locations is okay
new_test[c(5,7)] <- 2000
new_test
2018_revenue <- (1,2,3,4)
sws018_revenue <- (1,2,3,4)
sws018_revenue <- c(1,2,3,4)
sws018_revenue
2018_revenue <- c(1,2,3,4)
.2018_revenue <- c(1,2,3,4)
.revenue <- c(1,2,3,4)
_revenue_2018 <- c(1,2,3,4)
_revenue2018 <- c(1,2,3,4)
_revenue2018 <- c(1,2,3,4)
?make.names
revenue2018 <- c(1,2,3,4)
revenue 2018 <- c(1,2,3,4)
revenue(2018) <- c(1,2,3,4)
revenue_2018 <- c(1,2,3,4)
revenue.2018 <- c(1,2,3,4)
revenue.2018. <- c(1,2,3,4)
553.9/679.4
559.9/608.8
553.9/679.4 == 559.9/608.8
seq(1,5, length.out = 5)
seq(1,5, length.out = 9)
rep(1:5, 2)
rep(1:5, c(1,2,3,2,1))
rep(1:5, c(2,2,2,2,2))
rep(1:5, 2)
rep(1:5, each=2)
new_vect <- 2011:2017
new_vect
new_vect[3]
new_vect[c(1,5)]
new_vect[2:4]
seq(1,5)
vece1 <- seq(1295:1299)
vece2 <- seq(1300:1290)
vece <- c(vece1,vece2)
vece
seq(-5,-1)
vece1 <- seq(1295,1299)
vece2 <- seq(1300,1290)
vece <- c(vece1,vece2)
vece
revenue.2018. <- (0,2,34)
revenue.2018. <- c(0,2,34)
revenue.2018.
masim<-function(thetas, sigsq, T){
q=length(thetas)
noise<-rnorm(T+q, sd=sqrt(sigsq))
x<-c(noise[1:q],rep(0,T))
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
x<-x[(q+1):(T+q)]
x
}
x1<-masim(c(0.5,2),1,10000)
acf(x1)
x2<-masim(c(0.5,2),1,200)
acf(x2)
x1<-masim(c(0.5,2),1,10000)
acf(x1)
x2<-masim(c(0.5,2),1,200)
acf(x2)
x1<-masim(c(0.5,2),1,10000)
acf(x1)
x2<-masim(c(0.5,2),1,200)
acf(x2)
masim<-function(thetas, sigsq, T){
q=length(thetas)
noise<-rnorm(T+q, sd=sqrt(sigsq))
x<-c(noise[1:q],rep(0,T))
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
x<-x[(q+1):(T+q)]
x
}
x2<-masim(c(0.5,2),1,200)
acf(x2)
q=length(thetas)
x2<-masim(c(0.5,2),1,200)
acf(x2)
x2<-masim(c(0.5,2),1,200)
acf(x2)
x2<-masim(c(0.5,2),1,200)
acf(x2)
x2<-masim(c(0.5,2),1,200)
acf(x2)
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
masim<-function(thetas, sigsq, T){
q=length(thetas)
noise<-rnorm(T+q, sd=sqrt(sigsq))
x<-c(noise[1:q],rep(0,T))
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
x<-x[(q+1):(T+q)]
x
}
x2<-masim(c(0.5,2),1,200)
acf(x2)
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
x2<-masim(c(0.5,2),1,200)
acf(x2)
x<-x[(q+1):(T+q)]
x2<-masim(c(0.5,2),1,200)
acf(x2)
masim<-function(thetas, sigsq, T){
q=length(thetas)
noise<-rnorm(T+q, sd=sqrt(sigsq))
x<-c(noise[1:q],rep(0,T))
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
x<-x[(q+1):(T+q)]
x
}
x2<-masim(c(0.5,2),1,200)
acf(x2)
masim<-function(thetas, sigsq, T){
q=length(thetas)
noise<-rnorm(T+q, sd=sqrt(sigsq))
x<-c(noise[1:q],rep(0,T))
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
x<-x[(q+1):(T+q)]
x
}
x2<-masim(c(0.5,2),1,200)
acf(x2)
x<-x[(q+1):(T+q)]
masim<-function(thetas, sigsq, T){
q=length(thetas)
noise<-rnorm(T+q, sd=sqrt(sigsq))
x<-c(noise[1:q],rep(0,T))
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
x<-x[(q+1):(T+q)]
x
}
x2<-masim(c(0.5,2),1,200)
acf(x2)
masim<-function(thetas, sigsq, T){
q=length(thetas)
noise<-rnorm(T+q, sd=sqrt(sigsq))
x<-c(noise[1:q],rep(0,T))
for (i in (q+1):(T+q)){
x[i]<-thetas %*% noise[i-(1:q)] +noise[i]
}
x<-x[(q+1):(T+q)]
x
}
x1<-masim(c(0.5,2),1,10000)
acf(x1)
getwd()
setwd("/Users/yunluli/Desktop/CS4780/MP1")
data <- scan("output.txt", header=FALSE)
data <- scan("output.txt")
data <- read.table("output.txt", header=FALSE, sep="")
data <- read.table("output.txt", header=FALSE, sep="")
plot(data)
